{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAK/BC,iBAAiB,UAEtB,SAAkBC,GACfA,EAAIC,iBACJ,MAAMC,OAACA,EAAMC,KAAEA,EAAMC,MAAAC,GAASL,EAAIM,OAAOC,SACzC,IAAIC,EAAaH,EAAMI,cACnBC,EAAWP,EAAKM,cAEpB,IAAK,IAAIE,EAAI,EAAGA,EAAIT,EAAOU,MAAOD,GAAK,EAAE,CAEvC,GAAS,IAANA,EACFE,EAAcF,EAAEN,EAAMO,OACrBE,MAAK,EAACC,SAAEA,EAAQX,MAAEA,MAClBY,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBH,QAAiBX,MAAU,IAExEe,OAAM,EAACJ,SAAEA,EAAQX,MAAEA,MAClBY,EAAArB,GAASsB,OAAOG,QAAQ,sBAAoBL,QAAiBX,MAAU,QAElE,CACP,IAAIiB,EAAYb,GAAcE,EAEhCG,EAAcF,EAAGU,GAChBP,MAAK,EAACC,SAAEA,EAAQX,MAAEA,MACjBY,EAAArB,GAASsB,OAAOC,QAAQ,uBAAqBH,QAAiBX,MAAU,IAEzEe,OAAM,EAACJ,SAAEA,EAAQX,MAAEA,MAClBY,EAAArB,GAASsB,OAAOG,QAAQ,sBAAoBL,QAAeX,MAAU,G,CAIvEkB,YAAW,KACRtB,EAAIM,OAAOiB,OAAO,GACnB,I,CAGN,SAASV,EAAcE,EAAUX,GAE7B,OAAQ,IAAIoB,SAAQ,CAACC,EAAKC,KAC1B,MAAMC,EAAgBC,KAAKC,SAAW,GACtBP,YAAW,KACvBK,EACHF,EAAK,C,SAAEV,E,MAAUX,IAEjBsB,EAAI,C,SAAEX,E,MAAUX,GAAQ,GAExBA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form')\n\n\n\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt){\n   evt.preventDefault();\n   const {amount, step, delay} = evt.target.elements;\n   let delayFirst = delay.valueAsNumber;\n   let nextStep = step.valueAsNumber;\n   \n   for (let i = 0; i < amount.value; i += 1){\n    \n     if(i === 0){\n      createPromise(i,delay.value)\n      .then(({ position, delay }) => {\n       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n    }  else  {\n      let nextDelay = delayFirst += nextStep;\n\n    createPromise(i, nextDelay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    }\n   \n    setTimeout(() => {\n       evt.target.reset(); \n    },1000)\n  };\n\nfunction createPromise(position, delay) {\n  \n    return  new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    const timerId = setTimeout(() => {\n    if (shouldResolve) {\n     res ({ position, delay });\n    } else {\n     rej({ position, delay });\n    }\n  }, delay);\n  })\n\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","amount","step","delay","delay1","target","elements","delayFirst","valueAsNumber","nextStep","i","value","createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","nextDelay","setTimeout","reset","Promise","res","rej","shouldResolve","Math","random"],"version":3,"file":"03-promises.5474dc2e.js.map"}