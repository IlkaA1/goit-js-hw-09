{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAC7BC,EAAuBH,EAAvBI,OAAQC,EAAeL,EAAfM,KAAMC,EAASP,EAATQ,MAIrBR,EAAKS,iBAAiB,UAEtB,SAAkBC,GACfA,EAAIC,iBAIJ,IAHA,IAAIC,EAAaL,EAAMM,cACnBC,EAAWT,EAAKQ,cAEXE,EAAI,EAAGA,EAAIZ,EAAOa,MAAOD,GAAK,EAErC,GAAS,IAANA,EACFE,EAAcF,EAAER,EAAMS,OACrBE,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALX,MAClBc,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANJ,EAAM,M,IAEtEK,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUO,EAAKR,EAALX,MAClBc,EAAAxB,GAASyB,OAAOK,QAAQ,sBAAuCH,OAAfL,EAAS,QAAYK,OAANE,EAAM,M,QAEhE,CACP,IAAIE,EAAYjB,GAAcE,EAEhCG,EAAcF,EAAGc,GAChBX,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUU,EAAKX,EAALX,MACjBc,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAwCC,OAAfL,EAAS,QAAYK,OAANK,EAAM,M,IAEvEJ,OAAM,SAAAP,G,IAAGC,EAAQD,EAARC,SAAUW,EAAKZ,EAALX,MAClBc,EAAAxB,GAASyB,OAAOK,QAAQ,sBAAqCH,OAAfL,EAAS,QAAYK,OAANM,EAAM,M,IAOzE,SAASd,EAAcG,EAAUY,GAE7B,OAAQ,IAAIC,SAAQ,SAACC,EAAKC,GAC1B,IAAMC,EAAgBC,KAAKC,SAAW,GACtBC,YAAW,WACvBH,EACHF,EAAK,CAAEd,WAAUZ,MAAAwB,IAEjBG,EAAI,CAAEf,WAAUZ,MAAAwB,G,GAEhBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form')\nconst {amount, step, delay} = form;\n\n\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt){\n   evt.preventDefault();\n   let delayFirst = delay.valueAsNumber;\n   let nextStep = step.valueAsNumber;\n   \n   for (let i = 0; i < amount.value; i += 1){\n    \n     if(i === 0){\n      createPromise(i,delay.value)\n      .then(({ position, delay }) => {\n       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n    }  else  {\n      let nextDelay = delayFirst += nextStep;\n\n    createPromise(i, nextDelay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    }\n   \n\n}\n\nfunction createPromise(position, delay) {\n  \n    return  new Promise((res, rej) =>{\n    const shouldResolve = Math.random() > 0.3;\n    const timerId = setTimeout(() => {\n    if (shouldResolve) {\n     res ({ position, delay });\n    } else {\n     rej({ position, delay });\n    }\n  }, delay);\n  })\n}\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$amount","amount","$ce04d3a99e08e73b$var$step","step","$ce04d3a99e08e73b$var$delay","delay","addEventListener","evt","preventDefault","delayFirst","valueAsNumber","nextStep","i","value","createPromise","then","param","position","delay1","$parcel$interopDefault","Notify","success","concat","catch","delay2","failure","nextDelay","delay3","delay4","delay5","Promise","res","rej","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.e7a61c62.js.map"}