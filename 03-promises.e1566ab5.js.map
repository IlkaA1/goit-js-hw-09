{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,UAC9BC,OAACC,EAAMC,KAAEC,EAAIC,MAAEC,GAASR,EAI9BA,EAAKS,iBAAiB,UAEtB,SAAkBC,GACfA,EAAIC,iBACJ,IAAIC,EAAaJ,EAAMK,cACnBC,EAAWR,EAAKO,cAEpB,IAAK,IAAIE,EAAI,EAAGA,EAAIX,EAAOY,MAAOD,GAAK,EAErC,GAAS,IAANA,EACFE,EAAcF,EAAEP,EAAMQ,OACrBE,MAAK,EAACC,SAAEA,EAAUZ,MAAAa,MAClBC,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,IAExEI,OAAM,EAACL,SAAEA,EAAUZ,MAAAkB,MAClBJ,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAoBP,QAAiBM,MAAU,QAElE,CACP,IAAIE,EAAYf,GAAcE,EAEhCG,EAAcF,EAAGY,GAChBT,MAAK,EAACC,SAAEA,EAAUZ,MAAAqB,MACjBP,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAqBJ,QAAiBS,MAAU,IAEzEJ,OAAM,EAACL,SAAEA,EAAUZ,MAAAsB,MAClBR,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAoBP,QAAeU,MAAU,G,CAO3E,SAASZ,EAAcE,EAAUW,GAE7B,OAAQ,IAAIC,SAAQ,CAACC,EAAKC,KAC1B,MAAMC,EAAgBC,KAAKC,SAAW,GACtBC,YAAW,KACvBH,EACHF,EAAK,C,SAAEb,EAAUZ,MAAAuB,IAEjBG,EAAI,C,SAAEd,EAAUZ,MAAAuB,GAAQ,GAExBA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form')\nconst {amount, step, delay} = form;\n\n\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt){\n   evt.preventDefault();\n   let delayFirst = delay.valueAsNumber;\n   let nextStep = step.valueAsNumber;\n   \n   for (let i = 0; i < amount.value; i += 1){\n    \n     if(i === 0){\n      createPromise(i,delay.value)\n      .then(({ position, delay }) => {\n       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n    }  else  {\n      let nextDelay = delayFirst += nextStep;\n\n    createPromise(i, nextDelay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    }\n   \n\n}\n\nfunction createPromise(position, delay) {\n  \n    return  new Promise((res, rej) =>{\n    const shouldResolve = Math.random() > 0.3;\n    const timerId = setTimeout(() => {\n    if (shouldResolve) {\n     res ({ position, delay });\n    } else {\n     rej({ position, delay });\n    }\n  }, delay);\n  })\n}\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","amount","$47d4ff9957288465$var$amount","step","$47d4ff9957288465$var$step","delay","$47d4ff9957288465$var$delay","addEventListener","evt","preventDefault","delayFirst","valueAsNumber","nextStep","i","value","createPromise","then","position","delay1","$parcel$interopDefault","Notify","success","catch","delay2","failure","nextDelay","delay3","delay4","delay5","Promise","res","rej","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.e1566ab5.js.map"}