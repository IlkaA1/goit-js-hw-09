{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGaC,SAASC,cAAc,SAK/BC,iBAAiB,UAEtB,SAAkBC,GACfA,EAAIC,iBAKJ,IAJA,IAA8BC,EAAAF,EAAIG,OAAOC,SAAlCC,EAAuBH,EAAvBG,OAAQC,EAAeJ,EAAfI,KAAMC,EAASL,EAATM,MACjBC,EAAaF,EAAMG,cACnBC,EAAWL,EAAKI,cAEXE,EAAI,EAAGA,EAAIP,EAAOQ,MAAOD,GAAK,EAAE,CAEvC,GAAS,IAANA,EACFE,EAAcF,EAAEL,EAAMM,OACrBE,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MAClBU,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANb,EAAM,M,IAEtEc,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MAClBU,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAuCF,OAAfJ,EAAS,QAAYI,OAANb,EAAM,M,QAEhE,CACP,IAAIgB,EAAYf,GAAcE,EAEhCG,EAAcF,EAAGY,GAChBT,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MACjBU,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANb,EAAM,M,IAEvEc,OAAM,SAAAN,G,IAAGC,EAAQD,EAARC,SAAUT,EAAKQ,EAALR,MAClBU,EAAAvB,GAASwB,OAAOI,QAAQ,sBAAqCF,OAAfJ,EAAS,QAAYI,OAANb,EAAM,M,IAIrEiB,YAAW,WACRzB,EAAIG,OAAOuB,O,GACZ,I,CAGN,SAASZ,EAAcG,EAAUT,GAE7B,OAAQ,IAAImB,SAAQ,SAACC,EAAKC,GAC1B,IAAMC,EAAgBC,KAAKC,SAAW,GACtBP,YAAW,WACvBK,EACHF,EAAK,CAAEX,WAAUT,UAEjBqB,EAAI,CAAEZ,WAAUT,S,GAEhBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form')\n\n\n\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(evt){\n   evt.preventDefault();\n   const {amount, step, delay} = evt.target.elements;\n   let delayFirst = delay.valueAsNumber;\n   let nextStep = step.valueAsNumber;\n   \n   for (let i = 0; i < amount.value; i += 1){\n    \n     if(i === 0){\n      createPromise(i,delay.value)\n      .then(({ position, delay }) => {\n       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      });\n    }  else  {\n      let nextDelay = delayFirst += nextStep;\n\n    createPromise(i, nextDelay)\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    }\n   \n    setTimeout(() => {\n       evt.target.reset(); \n    },1000)\n  };\n\nfunction createPromise(position, delay) {\n  \n    return  new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    const timerId = setTimeout(() => {\n    if (shouldResolve) {\n     res ({ position, delay });\n    } else {\n     rej({ position, delay });\n    }\n  }, delay);\n  })\n\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","evt","preventDefault","_elements","target","elements","amount","step","delay1","delay","delayFirst","valueAsNumber","nextStep","i","value","createPromise","then","param","position","$parcel$interopDefault","Notify","success","concat","catch","failure","nextDelay","setTimeout","reset","Promise","res","rej","shouldResolve","Math","random"],"version":3,"file":"03-promises.d84530d5.js.map"}